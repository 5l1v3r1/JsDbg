.block { as ${/v:JsDbgVersion} 2017-04-21-02.zip}
.block { as ${/v:JsDbgPath} \\iefs\users\psalas\jsdbg\jsdbg.exe}
.block { as ${/v:JsDbgStrPath} "\\\\iefs\\users\\psalas\\jsdbg\\jsdbg.exe ${JsDbgVersion}"}

r $t0 = 0; $$ next token is the remote
r $t1 = 0; $$ created a new remote
r $t2 = 0; $$ number of clients

.foreach (client {.clients})
{
    .if (@@masm($spat("${client}", "active")))
    {
        r $t2 = @$t2 + 1;
    }
}

.while (1)
{
    .foreach (server {.servers})
    {
        .if (@$t0)
        {
            $$ this token is the remote
            .if (@$t2 <= 1)
            {
                $$ no more than one client connected, so it's safe to launch JsDbg on the debugging host
                .catch {
                    $$ Copy the launcher locally in case we're running in a post-mortem debugger, where the debugger cannot run code from a share.
                    .block {.shell -x copy /Y ${JsDbgPath} %TEMP%\jsdbg.exe && copy /Y \\iefs\users\psalas\jsdbg\JsDbg.Remoting.dll %TEMP%\JsDbg.Remoting.dll && %TEMP%\jsdbg.exe /silent \\iefs\users\psalas\jsdbg\${JsDbgVersion} ${server}};
                    .break;
                };
                .printf "\r\nUnable to launch JsDbg, perhaps because shell commands are disabled.  Run\r\n\r\n";
                .printf ${JsDbgStrPath};
                .printf " ${server} \r\n\r\nlocally to launch.\r\n";
                .break;
            }
            .else
            {
                .printf "Multiple clients are connected. Run\r\n\r\n";
                .printf ${JsDbgStrPath};
                .printf " ${server} \r\n\r\nlocally to launch.\r\n";
                .break;
            }
        }


        .if (@@masm($scmp("${server}", "-remote")) == 0)
        {
            r $t0 = 1;
        }
    }

    .if (@$t0)
    {
        $$ we found a remote and either connected to it or asked the user to do so
        .break;
    }

    .if(@$t1)
    {
        .printf "Unable to find or start a remote debugging server.\r\n";
        .break;
    }
    .else
    {
        .block {.server npipe:pipe=jsdbg-%x}
        r $t1 = 1;
    }
}

r $t0 = 0;
r $t1 = 0;
r $t2 = 0;

.block { ad ${/v:JsDbgVersion} }
.block { ad ${/v:JsDbgPath} }
.block { ad ${/v:JsDbgStrPath} }
